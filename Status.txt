<<<<<<< HEAD
Criar Jogador-> Inserir o nome e a cor desejada -> DONE + needs to be tested
Editar Jogador -> Mudar o nome e/ou a cor -> DONE + needs to be tested
Começar o jogo ->
Jogar dado -> DONE
Jogar moeda -> DONE
Andar x -> DONE
Abrir ação da casa -> x
Responder pergunta ->
Tirar carta ->
Pausar jogo ->
Resumir jogo ->
Terminar jogo ->
Recomeçar o jogo ->
Ir a cadeia ou voltar x casas ->
Viciar dado -> DONE
Rodar a roleta ->
Jogar dado novamente ->
Pedir mais tempo para responder a pergunta ->
Diminuir o número de opções a selecionar ->
Adicionar texto de vitória ->

Recursividade (no lugar de iteratividade); DONE I.E. NO WHILE OR FOR LOOPS
• Imutabilidade; DONE I.E. ALWAYS USE VAL NOT VAR
• Pure functions (exceto na camada interativa); DONE
• Tail recursion; DONE
• Lazy evaluation; DONE I.E. MAKE EVERY VAL THAT IS NOT IMEDIATLY USED A LAZY VAL
• Pattern matching; DONE    NO IFS OR ELSES USE MATCH -CASE
• Funções de ordem superior; DONE
• Padrões recorrentes sobre listas (incluir: map DONE, filter DONE e fold);
• Partially Applied Functions e/ou Currying;
• Try e Option;
• Functional Object-Oriented programming.