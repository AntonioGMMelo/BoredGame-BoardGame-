Criar Jogador-> Inserir o nome e a cor desejada -> DONE + needs to be tested
Editar Jogador -> Mudar o nome e/ou a cor -> DONE + needs to be tested
Começar o jogo ->INTERFACE
Jogar dado -> DONE
Jogar moeda -> DONE
Andar x -> DONE
Abrir ação da casa x-> INTEFACE
Adicionar Pergunta -> DONE
Remover Pergunta -> DONE
Dar Dica -> DONE
Responder pergunta -> DONE
Tirar carta ->DONE
Pausar jogo ->INTERFACE
Resumir jogo ->INTERFACE
Terminar jogo ->INTERFACE
Recomeçar o jogo ->INTERFACE
Ir a cadeia ou voltar x casas -> INTERFACE
Viciar dado -> DONE
Rodar a roleta ->DONE
Jogar dado novamente ->INTERFACE
Pedir mais tempo para responder a pergunta ->INTERFACE
Diminuir o número de opções a selecionar ->INTERFACE
Adicionar texto de vitória ->INTERFACE
Family Feud Like querry -> DONE
The price is right kinda querry ->DONE

Recursividade (no lugar de iteratividade); DONE I.E. NO WHILE OR FOR LOOPS
• Imutabilidade; DONE I.E. ALWAYS USE VAL NOT VAR
• Pure functions (exceto na camada interativa); DONE
• Tail recursion; DONE
• Lazy evaluation; DONE I.E. MAKE EVERY VAL THAT IS NOT IMEDIATLY USED A LAZY VAL
• Pattern matching; DONE    NO IFS OR ELSES USE MATCH -CASE
• Funções de ordem superior; DONE
• Padrões recorrentes sobre listas (incluir: map DONE, filter DONE e fold);
• Partially Applied Functions e/ou Currying; DONE I THINK
• Try e Option;
• Functional Object-Oriented programming. DONE